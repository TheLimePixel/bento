======= nesting::main::baz =======
StringExpr {
  span: 58..74
  content: "Hello from Baz!"
}

======= nesting::main::bar =======
ScopeExpr {
  span: 24..89
  type: bento::Unit
  statements: [
    CallExpr {
      span: 14..37
      type: bento::Unit
      fn: bento::io::println
      args: [
        CallExpr {
          span: 2..16
          type: bento::String
          fn: nesting::main::baz
          args: [
            StringExpr {
              span: 2..11
              content: "Hellope!"
            }
          ]
        }
      ]
    }
    CallExpr {
      span: 74..99
      type: bento::Unit
      fn: bento::io::println
      args: [
        StringExpr {
          span: 2..18
          content: "Hello from Bar!"
        }
      ]
    }
  ]
}

======= nesting::main::foo =======
CallExpr {
  span: 58..105
  type: bento::Unit
  fn: bento::io::println
  args: [
    ScopeExpr {
      span: 2..40
      type: bento::String
      statements: [
        CallExpr {
          span: 22..26
          type: bento::Unit
          fn: nesting::main::bar
          args: []
        }
        LocalAccessExpr {
          span: 2..5
          type: bento::String
          binding: $0
        }
      ]
    }
  ]
}

======= nesting::main::main =======
ScopeExpr {
  span: 26..90
  type: bento::Unit
  statements: [
    CallExpr {
      span: 14..35
      type: bento::Unit
      fn: nesting::main::foo
      args: [
        StringExpr {
          span: 2..18
          content: "Hello from Foo!"
        }
      ]
    }
    CallExpr {
      span: 70..96
      type: bento::Unit
      fn: bento::io::println
      args: [
        StringExpr {
          span: 2..19
          content: "Hello from Main!"
        }
      ]
    }
  ]
}