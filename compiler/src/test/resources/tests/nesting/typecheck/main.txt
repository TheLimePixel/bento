======= Function(nesting::main::baz) =======
StringExpr {
  span: 58..74
  content: "Hello from Baz!"
}

======= Function(nesting::main::bar) =======
ScopeExpr {
  span: 24..89
  type: SingletonType {
    bento::Unit
  }
  statements: [
    CallExpr {
      span: 14..37
      type: SingletonType {
        bento::Unit
      }
      fn: Function {
        bento::io::println
      }
      args: [
        CallExpr {
          span: 2..16
          type: RecordType {
            bento::String
          }
          fn: Function {
            nesting::main::baz
          }
          args: [
            StringExpr {
              span: 2..11
              content: "Hellope!"
            }
          ]
        }
      ]
    }
    CallExpr {
      span: 74..99
      type: SingletonType {
        bento::Unit
      }
      fn: Function {
        bento::io::println
      }
      args: [
        StringExpr {
          span: 2..18
          content: "Hello from Bar!"
        }
      ]
    }
  ]
}

======= Function(nesting::main::foo) =======
CallExpr {
  span: 58..105
  type: SingletonType {
    bento::Unit
  }
  fn: Function {
    bento::io::println
  }
  args: [
    ScopeExpr {
      span: 2..40
      type: RecordType {
        bento::String
      }
      statements: [
        CallExpr {
          span: 22..26
          type: SingletonType {
            bento::Unit
          }
          fn: Function {
            nesting::main::bar
          }
          args: []
        }
        LocalAccessExpr {
          span: 2..5
          type: RecordType {
            bento::String
          }
          binding: $0
        }
      ]
    }
  ]
}

======= Function(nesting::main::main) =======
ScopeExpr {
  span: 26..90
  type: SingletonType {
    bento::Unit
  }
  statements: [
    CallExpr {
      span: 14..35
      type: SingletonType {
        bento::Unit
      }
      fn: Function {
        nesting::main::foo
      }
      args: [
        StringExpr {
          span: 2..18
          content: "Hello from Foo!"
        }
      ]
    }
    CallExpr {
      span: 70..96
      type: SingletonType {
        bento::Unit
      }
      fn: Function {
        bento::io::println
      }
      args: [
        StringExpr {
          span: 2..19
          content: "Hello from Main!"
        }
      ]
    }
  ]
}