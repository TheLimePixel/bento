======= nesting::main::baz =======
FunctionDef {
  span: 0..45
  params: [
    Param {
      span: 8..16
      pattern: WildcardPattern {
        span: 8..8
      }
      type: TypeRef {
        type: Identifier {
          lastNameSegment: String
          binding: Accessor {
            of: bento::String
            type: Get
          }
          span: 11..16
        }
      }
    }
  ]
  returnType: TypeRef {
    type: Identifier {
      lastNameSegment: String
      binding: Accessor {
        of: bento::String
        type: Get
      }
      span: 20..25
    }
  }
  body: StringExpr {
    span: 29..45
    content: "Hello from Baz!"
  }
}

======= nesting::main::bar =======
FunctionDef {
  span: 0..77
  params: []
  returnType: null
  body: ScopeExpr {
    span: 12..77
    statements: [
      CallExpr {
        span: 19..42
        on: Identifier {
          lastNameSegment: println
          binding: Accessor {
            of: bento::io::println
            type: Get
          }
          span: 19..25
        }
        args: [
          CallExpr {
            span: 27..41
            on: Identifier {
              lastNameSegment: baz
              binding: Accessor {
                of: nesting::main::baz
                type: Get
              }
              span: 27..29
            }
            args: [
              StringExpr {
                span: 31..40
                content: "Hellope!"
              }
            ]
          }
        ]
      }
      CallExpr {
        span: 49..74
        on: Identifier {
          lastNameSegment: println
          binding: Accessor {
            of: bento::io::println
            type: Get
          }
          span: 49..55
        }
        args: [
          StringExpr {
            span: 57..73
            content: "Hello from Bar!"
          }
        ]
      }
    ]
  }
}

======= nesting::main::foo =======
FunctionDef {
  span: 0..76
  params: [
    Param {
      span: 8..19
      pattern: IdentPattern {
        local: @8..11
      }
      type: TypeRef {
        type: Identifier {
          lastNameSegment: String
          binding: Accessor {
            of: bento::String
            type: Get
          }
          span: 14..19
        }
      }
    }
  ]
  returnType: null
  body: CallExpr {
    span: 29..76
    on: Identifier {
      lastNameSegment: println
      binding: Accessor {
        of: bento::io::println
        type: Get
      }
      span: 29..35
    }
    args: [
      ScopeExpr {
        span: 37..75
        statements: [
          CallExpr {
            span: 48..52
            on: Identifier {
              lastNameSegment: bar
              binding: Accessor {
                of: nesting::main::bar
                type: Get
              }
              span: 48..50
            }
            args: []
          }
          Identifier {
            lastNameSegment: text
            binding: Accessor {
              of: @8..11
              type: Get
            }
            span: 64..67
          }
        ]
      }
    ]
  }
}

======= nesting::main::main =======
FunctionDef {
  span: 0..77
  params: []
  returnType: null
  body: ScopeExpr {
    span: 13..77
    statements: [
      CallExpr {
        span: 20..41
        on: Identifier {
          lastNameSegment: foo
          binding: Accessor {
            of: nesting::main::foo
            type: Get
          }
          span: 20..22
        }
        args: [
          StringExpr {
            span: 24..40
            content: "Hello from Foo!"
          }
        ]
      }
      CallExpr {
        span: 48..74
        on: Identifier {
          lastNameSegment: println
          binding: Accessor {
            of: bento::io::println
            type: Get
          }
          span: 48..54
        }
        args: [
          StringExpr {
            span: 56..73
            content: "Hello from Main!"
          }
        ]
      }
    ]
  }
}