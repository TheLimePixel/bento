======= types::main::foo =======
FunctionDef {
  span: 54..102
  params: [
    Param {
      span: 2..16
      pattern: IdentPattern {
        span: 0..2
        local: $0
      }
      type: TypeRef {
        span: 4..13
        type: Path {
          span: 4..13
          binding: Accessor {
            of: types::types::Foo
            type: Get
          }
        }
      }
    }
  ]
  returnType: null
  body: CallExpr {
    span: 54..75
    on: Path {
      span: 0..6
      binding: Accessor {
        of: bento::io::println
        type: Get
      }
    }
    args: [
      StringExpr {
        span: 2..14
        content: "Foooooooooo"
      }
    ]
  }
}

======= types::main::printBar =======
FunctionDef {
  span: 160..208
  params: [
    Param {
      span: 2..16
      pattern: IdentPattern {
        span: 0..2
        local: $0
      }
      type: TypeRef {
        span: 4..13
        type: Path {
          span: 4..13
          binding: Accessor {
            of: types::types::Bar
            type: Get
          }
        }
      }
    }
  ]
  returnType: null
  body: CallExpr {
    span: 64..80
    on: Path {
      span: 0..6
      binding: Accessor {
        of: bento::io::println
        type: Get
      }
    }
    args: [
      MemberAccessExpr {
        span: 2..9
        on: Path {
          span: 0..2
          binding: Accessor {
            of: $0
            type: Get
          }
        }
        field: name
      }
    ]
  }
}

======= types::main::main =======
FunctionDef {
  span: 266..401
  params: []
  returnType: null
  body: ScopeExpr {
    span: 26..148
    statements: [
      CallExpr {
        span: 14..28
        on: Path {
          span: 0..2
          binding: Accessor {
            of: types::main::foo
            type: Get
          }
        }
        args: [
          Path {
            span: 2..11
            binding: Accessor {
              of: types::types::Foo
              type: Get
            }
          }
        ]
      }
      LetExpr {
        span: 56..87
        pattern: IdentPattern {
          span: 8..10
          local: $0
        }
        type: null
        expr: CallExpr {
          span: 30..46
          on: Path {
            span: 0..9
            binding: Accessor {
              of: types::types::Bar
              type: Get
            }
          }
          args: [
            StringExpr {
              span: 2..6
              content: "Bar"
            }
          ]
        }
      }
      CallExpr {
        span: 132..144
        on: Path {
          span: 0..7
          binding: Accessor {
            of: types::main::printBar
            type: Get
          }
        }
        args: [
          Path {
            span: 2..4
            binding: Accessor {
              of: $0
              type: Get
            }
          }
        ]
      }
      AssignmentExpr {
        span: 170..185
        left: MemberAccessExpr {
          span: 0..7
          on: Path {
            span: 0..2
            binding: Accessor {
              of: $0
              type: Get
            }
          }
          field: name
        }
        right: StringExpr {
          span: 22..26
          content: "Baz"
        }
      }
      CallExpr {
        span: 214..226
        on: Path {
          span: 0..7
          binding: Accessor {
            of: types::main::printBar
            type: Get
          }
        }
        args: [
          Path {
            span: 2..4
            binding: Accessor {
              of: $0
              type: Get
            }
          }
        ]
      }
    ]
  }
}